<?xml version="1.0" encoding="UTF-8"?>

<!-- RULES 
    * A live cell dies if it has fewer than 2 neighbors
    * A live cell with two or three live neighbors lives on
    * A live cell with more than three live neighbors dies
    * A dead cell will be brought back to live if it has 3 neighbors
-->

<Graphs xmlns="" appname="gol">
    <GraphType id="gol_type">
        <Properties>
            <![CDATA[ 
            uint8_t cellCount = 5
            uint8_t maxGen = 10
            ]]>
        </Properties>
        <MessageTypes>
            <MessageType id="small_talk">
                <Message>
                    <![CDATA[ 
                    bool alive; /* Whether or not the speaker is currently alive. *
                    bool even; /* Holds the current generation (even numbered or uneven numbered) */
                    bool done; /* Holds whether the sender has reached the last generation. */
                    ]]>
                </Message>
            </MessageType>
        </MessageTypes>
        <DeviceTypes>
            <DeviceType id="citizen">
                <Properties>
                    <![CDATA[ 
                    bool alive; /* The starting state of the node. */
                    ]]>
                </Properties>
                <State>
                    <![CDATA[ 
                    bool alive; /* Holds he current state of the node. */
                    bool even = true; /* Holds the current generation of the node (even numbered or uneven numbered) */
                    bool done = false;
                    uint8_t gen = 0; /* Increments with each update */

                    uint8_t conversations[] = {0, 0}; /* Tracks the amount of neighbours having replied at even and uneven generations */
                    uint8_t livingNeighbours[] = {0, 0}; /* Tracks the amount of living neighbours */
                    ]]>
                </State>
                <OutputPin name="sender" messageTypeId="small_talk">
                    <OnSend>
                        <![CDATA[ 
                        MSG(alive) = DEVICESTATE(alive);
                        MSG(even) = DEVICESTATE(even);
                        MSG(bool) = DEVICESTATE(bool);
                        ]]>
                    </OnSend>
                </OutputPin>
                <InputPin name="receiver" messageTypeId="small_talk">
                    <OnReceive>
                        <![CDATA[                         
                        if (MSG(even)) {
                            DEVICESTATE(convations[0]) ++;
                            DEVICESTATE(livingNeighbours[0]) += MSG(alive);
                        }
                        else {
                            DEVICESTATE(convations[1]) ++;
                            DEVICESTATE(livingNeighbours[1]) += MSG(alive);
                        }
                        ]]>
                    </OnReceive>
                </InputPin>
                <ReadyToSend>
                    <![CDATA[ 
                    void rules(uint8_t live_neighbors) {
                        if (DEVICESTATE(alive)) {
                            if (live_neighbors < 1) DEVICESTATE(alive) = false;
                        }
                        else {
                            if (live_neighbors > 1) DEVICESTATE(alive) = true;
                        }
                    }

                    void update(uint8_t cycle) {
                        rules(DEVICESTATE(livingNeighbours[cycle])); /* Applies the rules of the game. */
                        DEVICESTATE(gen) ++;
                        DEVICESTATE(even) = cycle; /* Switches the state of our node. */
                        DEVICESTATE(conversations[cycle]) = 0;
                        DEVICESTATE(livingNeighbours[cycle]) = 0;
                        if (DEVICESTATE(gen) >= GRAPHPROPERTIES(maxGen)) {
                            DEVICESTATE(done) = true
                        } else {
                            RTS(sender)
                        }
                    }

                    /* Once updated, check if we can update yet */
                    if (DEVICESTATE(even) && DEVICESTATE(conversations[0] >= 2) {
                        update(0)
                    }
                    if (!DEVICESTATE(even) && DEVICESTATE(converations[1] >= 2) {
                        update(1)
                    }
                    ]]>
                </ReadyToSend>
                <OnInit>
                    <![CDATA[ 
                    DEVICESTATE(alive) = DEVICEPROPERTIES(alive);
                    ]]>
                </OnInit>
            </DeviceType>
        </DeviceTypes>
        <SupervisorType id="id">
            <Code>
                <![CDATA[ 
                #include <stdio.h> /* For writing an output file. */
                ]]>
            </Code>
            <State>
                <![CDATA[ 
                /* Ominous */
                bool failed = false;
                bool finished = false;

                /* Counter */
                int finishedCells = 0;

                /* Output file. */
                FILE* resultFile;
                ]]>
            </State>
            <OnInit>
                <![CDATA[ 
                SUPSTATE(resultFile) = fopen("ring_test_output", "w");
                ]]>
            </OnInit>
            <OnStop>
                <![CDATA[
                fclose(SUPSTATE(resultFile));
                ]]>
            </OnStop>
            <SupervisorInPin id="" messageTypeId="small_talk">
                <OnReceive>
                    <![CDATA[ 
                    if (!SUPSTATE(failed))
                    {
                        if (MSG(done)) {
                            SUPSTATE(finishedCells) ++;

                            if (SUPSTATE(finishedCells) >= GRAPHPROPERTIES(cellCount)) {
                                SUPSTATE(finished) = true;
                                fprintf(SUPSTATE(resultFile), "1"); 
                            }
                        }
                    }
                    ]]>
                </OnReceive>
            </SupervisorInPin>
            <SupervisorOutPin messageTypeId="small_talk">
                <OnSend></OnSend>
                <ReadyToSend></ReadyToSend>
            </SupervisorOutPin>
        </SupervisorType>
    </GraphType>

    <GraphInstance id="gol_instance" graphTypeId="gol_type" P="5,10">
        <DeviceInstances>
            <DevI id="0" type="citizen" P="{0}" />
            <DevI id="1" type="citizen" P="{1}" />
            <DevI id="2" type="citizen" P="{0}" />
            <DevI id="3" type="citizen" P="{1}" />
            <DevI id="4" type="citizen" P="{0}" />
        </DeviceInstances>
        <EdgeInstances>
            <EdgeI path="1:receiver-0:sender" />
            <EdgeI path="2:receiver-1:sender" />
            <EdgeI path="3:receiver-2:sender" />
            <EdgeI path="4:receiver-3:sender" />
            <EdgeI path="0:receiver-4:sender" />
        </EdgeInstances>
    </GraphInstance>
</Graphs>