<?xml version="1.0" encoding="UTF-8"?>

<!-- RULES 
    * A live cell dies if it has fewer than 2 neighbors
    * A live cell with two or three live neighbors lives on
    * A live cell with more than three live neighbors dies
    * A dead cell will be brought back to live if it has 3 neighbors
-->

<Graphs xmlns="" appname="gol">
    <GraphType id="gol_type">
        <Properties>
            <![CDATA[ 
            uint8_t cellCount = 16;
            uint8_t end = 2;
            uint32_t cycles = 2;
            ]]>
        </Properties>
        <MessageTypes>
            <MessageType id="ping">
                <Message>
                    <![CDATA[ 
                    uint8_t alive;
                    uint32_t gen;
                    ]]>
                </Message>
            </MessageType>
            <MessageType id="pong">
                <Message>
                    <![CDATA[
                    uint8_t alive;
                    uint32_t gen;
                    uint8_t x;
                    uint8_t y;
                    ]]>
                </Message>
            </MessageType>
        </MessageTypes>
        <DeviceTypes>
            <DeviceType id="cell">
                <Properties>
                    <![CDATA[ 
                    uint8_t alive;
                    uint8_t x;
                    uint8_t y;
                    ]]>
                </Properties>
                <State>
                    <![CDATA[ 
                    uint8_t alive;
                    uint32_t gen = 0;
                    uint8_t begin = 1;

                    uint8_t pings[2] = {0, 0};
                    uint8_t liveNeighbours[2] = {0, 0};
                    ]]>
                </State>
                <OnInit>
                    <![CDATA[ 
                    DEVICESTATE(alive) = DEVICEPROPERTIES(alive);
                    ]]>
                </OnInit>
                <ReadyToSend>
                    <![CDATA[
                    if (DEVICESTATE(begin)) {
                        RTS(sender);
                    } 
                    else if (DEVICESTATE(gen) < GRAPHPROPERTIES(end) && (DEVICESTATE(pings[DEVICESTATE(gen) % 2]) >= 8)) {
                            if (DEVICESTATE(gen) % GRAPHPROPERTIES(cycles) == 0) RTSSUP();
                            RTS(sender);
                        }
                    ]]>
                </ReadyToSend>
                <OutputPin name="sender" messageTypeId="ping">
                    <OnSend>
                        <![CDATA[
                        if (!DEVICESTATE(begin)) {

                            uint8_t prev = DEVICESTATE(gen) % 2;

                            DEVICESTATE(gen) ++;

                            handler_log(2, "updating and chilling");
                            if (DEVICESTATE(alive) && (DEVICESTATE(liveNeighbours[prev]) == 2 || DEVICESTATE(liveNeighbours[prev]) == 3)) DEVICESTATE(alive) = true;
                            else if (!DEVICESTATE(alive) && DEVICESTATE(liveNeighbours[prev]) == 3) DEVICESTATE(alive) = true;
                            else DEVICESTATE(alive) = false;
    
                            DEVICESTATE(liveNeighbours[prev]) = 0;
                            DEVICESTATE(pings[prev]) = 0;
                            
                        } else DEVICESTATE(begin) = 0;

                        MSG(alive) = DEVICESTATE(alive);
                        MSG(gen) = DEVICESTATE(gen);
                        ]]>
                    </OnSend>
                </OutputPin>
                <SupervisorOutPin messageTypeId="pong">
                    <OnSend>
                        <![CDATA[ 
                        MSG(alive) = DEVICESTATE(alive);
                        MSG(gen) = DEVICESTATE(gen);
                        MSG(x) = DEVICEPROPERTIES(x);
                        MSG(y) = DEVICEPROPERTIES(y);
                        ]]>
                    </OnSend>
                </SupervisorOutPin>
                <InputPin name="receiver" messageTypeId="ping">
                    <OnReceive>
                        <![CDATA[
                        DEVICESTATE(pings[MSG(gen) % 2]) ++;
                        DEVICESTATE(liveNeighbours[MSG(gen) % 2]) += MSG(alive);
                        ]]>
                    </OnReceive>
                </InputPin>
            </DeviceType>
            <SupervisorType id="id">
                <Code>
                    <![CDATA[ 
                    #include <stdio.h>
                    ]]>
                </Code>
                <State>
                    <![CDATA[
                    uint8_t failed = false;
    
                    int finishedCells = 0;
    
                    FILE* resultFile;
                    ]]>
                </State>
                <OnInit>
                    <![CDATA[
                    SUPSTATE(resultFile) = fopen("gol_output", "w");
                    ]]>
                </OnInit>
                <OnStop>
                    <![CDATA[
                    fclose(SUPSTATE(resultFile));
                    ]]>
                </OnStop>
                <SupervisorInPin id="" messageTypeId="pong">
                    <OnReceive>
                        <![CDATA[
                        if (!SUPSTATE(failed))
                        {
                            if (MSG(gen) == GRAPHPROPERTIES(end)) {
                                SUPSTATE(finishedCells) ++;

                                fprintf(SUPSTATE(resultFile), "%d, %d, %d, %d\n", MSG(x), MSG(y), MSG(gen), MSG(alive)); 
    
                                if (SUPSTATE(finishedCells) >= GRAPHPROPERTIES(cellCount)) {
                                    Super::stop_application();
                                }
                            }
                        }
                        ]]>
                    </OnReceive>
                </SupervisorInPin>
            </SupervisorType>
        </DeviceTypes>
    </GraphType>

    <GraphInstance id="gol_instance" graphTypeId="gol_type" P="{64,5,5}">
        <DeviceInstances>
            <DevI id="0" type="cell" P="{0,0,0}" />
            <DevI id="1" type="cell" P="{0,1,0}" />
            <DevI id="2" type="cell" P="{0,2,0}" />
            <DevI id="3" type="cell" P="{0,3,0}" />
            <DevI id="4" type="cell" P="{0,0,1}" />
            <DevI id="5" type="cell" P="{1,1,1}" />
            <DevI id="6" type="cell" P="{0,2,1}" />
            <DevI id="7" type="cell" P="{0,3,1}" />
            <DevI id="8" type="cell" P="{0,0,2}" />
            <DevI id="9" type="cell" P="{1,1,2}" />
            <DevI id="10" type="cell" P="{1,2,2}" />
            <DevI id="11" type="cell" P="{0,3,2}" />
            <DevI id="12" type="cell" P="{0,0,3}" />
            <DevI id="13" type="cell" P="{0,1,3}" />
            <DevI id="14" type="cell" P="{0,2,3}" />
            <DevI id="15" type="cell" P="{0,3,3}" />
        </DeviceInstances>

        <EdgeInstances>
            <EdgeI path="0:receiver-15:sender" />
            <EdgeI path="0:receiver-12:sender" />
            <EdgeI path="0:receiver-13:sender" />
            <EdgeI path="0:receiver-1:sender" />
            <EdgeI path="0:receiver-5:sender" />
            <EdgeI path="0:receiver-4:sender" />
            <EdgeI path="0:receiver-7:sender" />
            <EdgeI path="0:receiver-3:sender" />
            <EdgeI path="1:receiver-12:sender" />
            <EdgeI path="1:receiver-13:sender" />
            <EdgeI path="1:receiver-14:sender" />
            <EdgeI path="1:receiver-2:sender" />
            <EdgeI path="1:receiver-6:sender" />
            <EdgeI path="1:receiver-5:sender" />
            <EdgeI path="1:receiver-4:sender" />
            <EdgeI path="1:receiver-0:sender" />
            <EdgeI path="2:receiver-13:sender" />
            <EdgeI path="2:receiver-14:sender" />
            <EdgeI path="2:receiver-15:sender" />
            <EdgeI path="2:receiver-3:sender" />
            <EdgeI path="2:receiver-7:sender" />
            <EdgeI path="2:receiver-6:sender" />
            <EdgeI path="2:receiver-5:sender" />
            <EdgeI path="2:receiver-1:sender" />
            <EdgeI path="3:receiver-14:sender" />
            <EdgeI path="3:receiver-15:sender" />
            <EdgeI path="3:receiver-0:sender" />
            <EdgeI path="3:receiver-4:sender" />
            <EdgeI path="3:receiver-8:sender" />
            <EdgeI path="3:receiver-7:sender" />
            <EdgeI path="3:receiver-6:sender" />
            <EdgeI path="3:receiver-2:sender" />
            <EdgeI path="4:receiver-3:sender" />
            <EdgeI path="4:receiver-0:sender" />
            <EdgeI path="4:receiver-1:sender" />
            <EdgeI path="4:receiver-5:sender" />
            <EdgeI path="4:receiver-9:sender" />
            <EdgeI path="4:receiver-8:sender" />
            <EdgeI path="4:receiver-11:sender" />
            <EdgeI path="4:receiver-7:sender" />
            <EdgeI path="5:receiver-0:sender" />
            <EdgeI path="5:receiver-1:sender" />
            <EdgeI path="5:receiver-2:sender" />
            <EdgeI path="5:receiver-6:sender" />
            <EdgeI path="5:receiver-10:sender" />
            <EdgeI path="5:receiver-9:sender" />
            <EdgeI path="5:receiver-8:sender" />
            <EdgeI path="5:receiver-4:sender" />
            <EdgeI path="6:receiver-1:sender" />
            <EdgeI path="6:receiver-2:sender" />
            <EdgeI path="6:receiver-3:sender" />
            <EdgeI path="6:receiver-7:sender" />
            <EdgeI path="6:receiver-11:sender" />
            <EdgeI path="6:receiver-10:sender" />
            <EdgeI path="6:receiver-9:sender" />
            <EdgeI path="6:receiver-5:sender" />
            <EdgeI path="7:receiver-2:sender" />
            <EdgeI path="7:receiver-3:sender" />
            <EdgeI path="7:receiver-4:sender" />
            <EdgeI path="7:receiver-8:sender" />
            <EdgeI path="7:receiver-12:sender" />
            <EdgeI path="7:receiver-11:sender" />
            <EdgeI path="7:receiver-10:sender" />
            <EdgeI path="7:receiver-6:sender" />
            <EdgeI path="8:receiver-7:sender" />
            <EdgeI path="8:receiver-4:sender" />
            <EdgeI path="8:receiver-5:sender" />
            <EdgeI path="8:receiver-9:sender" />
            <EdgeI path="8:receiver-13:sender" />
            <EdgeI path="8:receiver-12:sender" />
            <EdgeI path="8:receiver-15:sender" />
            <EdgeI path="8:receiver-11:sender" />
            <EdgeI path="9:receiver-4:sender" />
            <EdgeI path="9:receiver-5:sender" />
            <EdgeI path="9:receiver-6:sender" />
            <EdgeI path="9:receiver-10:sender" />
            <EdgeI path="9:receiver-14:sender" />
            <EdgeI path="9:receiver-13:sender" />
            <EdgeI path="9:receiver-12:sender" />
            <EdgeI path="9:receiver-8:sender" />
            <EdgeI path="10:receiver-5:sender" />
            <EdgeI path="10:receiver-6:sender" />
            <EdgeI path="10:receiver-7:sender" />
            <EdgeI path="10:receiver-11:sender" />
            <EdgeI path="10:receiver-15:sender" />
            <EdgeI path="10:receiver-14:sender" />
            <EdgeI path="10:receiver-13:sender" />
            <EdgeI path="10:receiver-9:sender" />
            <EdgeI path="11:receiver-6:sender" />
            <EdgeI path="11:receiver-7:sender" />
            <EdgeI path="11:receiver-8:sender" />
            <EdgeI path="11:receiver-12:sender" />
            <EdgeI path="11:receiver-0:sender" />
            <EdgeI path="11:receiver-15:sender" />
            <EdgeI path="11:receiver-14:sender" />
            <EdgeI path="11:receiver-10:sender" />
            <EdgeI path="12:receiver-11:sender" />
            <EdgeI path="12:receiver-8:sender" />
            <EdgeI path="12:receiver-9:sender" />
            <EdgeI path="12:receiver-13:sender" />
            <EdgeI path="12:receiver-1:sender" />
            <EdgeI path="12:receiver-0:sender" />
            <EdgeI path="12:receiver-3:sender" />
            <EdgeI path="12:receiver-15:sender" />
            <EdgeI path="13:receiver-8:sender" />
            <EdgeI path="13:receiver-9:sender" />
            <EdgeI path="13:receiver-10:sender" />
            <EdgeI path="13:receiver-14:sender" />
            <EdgeI path="13:receiver-2:sender" />
            <EdgeI path="13:receiver-1:sender" />
            <EdgeI path="13:receiver-0:sender" />
            <EdgeI path="13:receiver-12:sender" />
            <EdgeI path="14:receiver-9:sender" />
            <EdgeI path="14:receiver-10:sender" />
            <EdgeI path="14:receiver-11:sender" />
            <EdgeI path="14:receiver-15:sender" />
            <EdgeI path="14:receiver-3:sender" />
            <EdgeI path="14:receiver-2:sender" />
            <EdgeI path="14:receiver-1:sender" />
            <EdgeI path="14:receiver-13:sender" />
            <EdgeI path="15:receiver-10:sender" />
            <EdgeI path="15:receiver-11:sender" />
            <EdgeI path="15:receiver-12:sender" />
            <EdgeI path="15:receiver-16:sender" />
            <EdgeI path="15:receiver-0:sender" />
            <EdgeI path="15:receiver-3:sender" />
            <EdgeI path="15:receiver-2:sender" />
            <EdgeI path="15:receiver-14:sender" />
        </EdgeInstances>
    </GraphInstance>
</Graphs>